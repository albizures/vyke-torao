<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>renderer2d</title>
		<style>
			canvas {
				image-rendering: pixelated;
			}
		</style>
  </head>
  <body>
    <canvas></canvas>
  </body>
</html>

<script>
import { createDirector, createGame, defineEntity, identity } from '../../src'
import { Canvas2dEntity, createCamera2d, createCanvas2d } from '../../src/plugins/canvas2d'
import { assets } from '../definitions'

const canvas2d = createCanvas2d({
	element: document.querySelector('canvas')!,
	resizeMode: 'fill',
})

const entity = defineEntity({
	coin: identity<true>(),
	square: identity<true>(),
	...Canvas2dEntity,
})

const game = createGame({
	plugins: [
		canvas2d,
	],
})

const director = createDirector<{
	home: never
}>(game)

director.scene('home', {
	entity,
	enter(context) {
		const { spawn } = context
		const size = 30

		assets.square.use.then((asset) => {
			const { value: context } = asset
			const { canvas } = context

			canvas.width = size
			canvas.height = size

			context.fillStyle = 'red'
			context.strokeStyle = 'black'
			context.fillRect(1, 1, size - 1, size - 1)
			context.strokeRect(1, 1, size - 1, size - 1)
		})

		spawn('square', {
			square: true,
			transform2d: entity.transform2d({
				position: { x: 10, y: 10 },
			}),
			sprite: entity.sprite({
				region: {
					width: size,
					height: size,
				},
				asset: assets.square,
			}),
		})

		spawn('coin', {
			square: true,
			transform2d: entity.transform2d({
				position: { x: 50, y: 10 },
			}),
			sprite: entity.sprite({
				region: {
					width: 32,
					height: 32,
				},
				asset: assets.coin,
			}),
		})

		spawn('camera', createCamera2d())
	},
})

director.start('home')
</script>
