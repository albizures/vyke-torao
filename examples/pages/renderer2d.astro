<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>renderer2d</title>
		<style>
			canvas {
				image-rendering: pixelated;
			}
		</style>
  </head>
  <body>
    <canvas></canvas>
  </body>
</html>

<script>
import { AtlasType, createTexture, createWorld, defineComponent, defineEntity } from '../../src'
import { createTransform2D, Transform2D, Velocity2D } from '../../src/components'
import { createGame, start } from '../../src/game'
import { Camera2D, createCamera2d } from '../../src/prefabs'
import { renderer2d, Texture2D } from '../../src/renderers/renderer2d'
import { assets, textures } from '../definitions'

const Coin = defineComponent('coin', (value: true) => value)
const Square = defineComponent('square', (value: true) => value)

const entity = defineEntity()
	.add(Transform2D)
	.add(Velocity2D)
	.add(Camera2D)
	.add(Texture2D)
	.add(Coin)
	.add(Square)
	.get()

const world = createWorld(entity)

const { game, createScene } = createGame({
	canvas: {
		element: document.querySelector('canvas')!,
		resizeMode: 'fill',
	},
})

const home = createScene({
	id: 'home',
	world,
	plugins: [
		renderer2d,
	],
	startup(context) {
		const { spawn } = context

		const size = 30
		assets.square.loader.onLoad((context) => {
			const { canvas } = context

			canvas.width = size
			canvas.height = size

			context.fillStyle = 'red'
			context.strokeStyle = 'black'
			context.fillRect(1, 1, size - 1, size - 1)
			context.strokeRect(1, 1, size - 1, size - 1)
		})

		const squareTexture = createTexture({
			atlas: {
				type: AtlasType.Single,
				region: {
					width: size,
					height: size,
				},
			},
			asset: assets.square,
		})

		spawn('square', {
			square: true,
			transform2D: createTransform2D({
				position: { x: 10, y: 10 },
			}),
			texture2D: squareTexture,
		})

		spawn('coin', {
			coin: true,
			transform2D: createTransform2D({
				position: { x: 50, y: 10 },
			}),
			texture2D: textures.coin,
		})

		spawn('camera', createCamera2d())
	},
})

start(game, home)
</script>
